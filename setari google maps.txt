AIzaSyCA0UQ1EUBIqivg6OxBC-vjJZswbpbU1y0  ---  Google API Key for Python Project

Valea Cetatii
Florilor 
Darste


### JavaScript


async function initMap() {
  // Request needed libraries.
  const { Map } = await google.maps.importLibrary("maps");
  const myLatlng = { lat: 45.6465677, lng: 25.6175714 };
  const map = new google.maps.Map(document.getElementById("map"), {
    zoom: 11,
    center: myLatlng,
  });
  // Create the initial InfoWindow.
  let infoWindow = new google.maps.InfoWindow({
    content: "Click pe harta pentru a selecta punctele",
    position: myLatlng,
  });

  infoWindow.open(map);
  // Configure the click listener.
  map.addListener("click", (mapsMouseEvent) => {
    // Close the current InfoWindow.
    infoWindow.close();
    // Create a new InfoWindow.
    infoWindow = new google.maps.InfoWindow({
      position: mapsMouseEvent.latLng,
    });
    infoWindow.setContent(
      JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2),
    );
    infoWindow.open(map);
  });
}

initMap();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
// This example creates a simple polygon representing the Microzone creation.

let polygonCoords = [
    
    ];

    let map;
    let infoWindow;

    async function initMap() {
      // Request needed libraries.
      const { Map } = await google.maps.importLibrary("maps");

      const myLatlng = { lat: 45.6465677, lng: 25.6175714 };
      map = new google.maps.Map(document.getElementById("map"), {
        zoom: 11,
        center: myLatlng,
      });

      // Create the initial InfoWindow.
      infoWindow = new google.maps.InfoWindow({
        content: "Click pe harta pentru a selecta punctele",
        position: myLatlng,
      });

      infoWindow.open(map);

      // Configure the click listener to capture click position
      map.addListener("click", (mapsMouseEvent) => {
        // Get the clicked latitude and longitude
        const clickedLatLng = mapsMouseEvent.latLng.toJSON();
        
        // Add the clicked point to the polygonCoords list
        polygonCoords.push(clickedLatLng);

        // Close the current InfoWindow.
        infoWindow.close();

        // Create a new InfoWindow at the clicked location.
        infoWindow = new google.maps.InfoWindow({
          position: mapsMouseEvent.latLng,
        });
        
        // Show the clicked coordinates in the InfoWindow
        infoWindow.setContent(
          JSON.stringify(clickedLatLng, null, 2)
        );
        infoWindow.open(map);

        // Re-draw the polygon to include the new point
        drawPolygon();
      });

      // Draw the initial polygon
      drawPolygon();
    }

    function drawPolygon() {
      // Construct the polygon with the updated coordinates
      const agentBerzei = new google.maps.Polygon({
        paths: polygonCoords,
        strokeColor: "#FF0000",
        strokeOpacity: 0.8,
        strokeWeight: 2,
        fillColor: "#FF0000",
        fillOpacity: 0.35,
      });

      // Set the polygon on the map
      agentBerzei.setMap(map);
    }

    window.initMap = initMap;





### HTML
<!DOCTYPE html>
<!--
  @license
  Copyright 2019 Google LLC. All Rights Reserved.
  SPDX-License-Identifier: Apache-2.0
-->
<html>
  <head>
    <title>Simple Polygon</title>
  </head>
  <body>
    <div id="map"></div>
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCA0UQ1EUBIqivg6OxBC-vjJZswbpbU1y0&callback=initMap&v=weekly&solution_channel=GMP_CCS_simplepolygon_v2"
      defer
    ></script>
  </body>
</html>



## CSS
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
/* 
  * Always set the map height explicitly to define the size of the div element
  * that contains the map. 
  */
#map {
  height: 100%;
}

/* Optional: Makes the sample page fill the window. */
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}